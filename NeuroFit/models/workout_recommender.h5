import pandas as pd
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.preprocessing import LabelEncoder
import numpy as np

# Load the dataset from CSV
data = pd.read_csv('data/workout_data.csv')

# Features: [age, height, weight, goal]
X = data[['age', 'height', 'weight', 'goal']].values

# Labels (Workout Types): Convert categorical 'workout_type' to integers
label_encoder = LabelEncoder()
y = label_encoder.fit_transform(data['workout_type'].values)

# Define the neural network model
workout_model = Sequential([
    Dense(64, activation='relu', input_dim=4),
    Dense(32, activation='relu'),
    Dense(4, activation='softmax')  # Assuming there are 4 workout types
])

# Compile the model
workout_model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Train the model
workout_model.fit(X, y, epochs=20, batch_size=32)

# Save the trained model to a file
workout_model.save('models/workout_recommender.h5')

# Optionally save the label encoder for decoding workout types
import pickle
with open('models/workout_label_encoder.pkl', 'wb') as file:
    pickle.dump(label_encoder, file)
